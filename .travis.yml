# Tell Travis to use new container-based infrastructure
sudo: false

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

php:
    - 5.3
    - 5.4
    - 5.5
    - 5.6

env:
    - WP_VERSION=master WP_MULTISITE=0
    - WP_VERSION=master WP_MULTISITE=1
    - WP_VERSION=4.3 WP_MULTISITE=0
    - WP_VERSION=4.3 WP_MULTISITE=0

before_script:
    # Setup WordPress
    - export WP_TESTS_DIR=/tmp/wordpress/tests/phpunit
    - export WP_CORE_DIR=/tmp/wordpress/src/
    - export WP_DEVELOP_DIR=/tmp/wordpress
    - git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress
    - mysql -e "CREATE DATABASE wordpress_tests;" -uroot
    - cp /tmp/wordpress/wp-tests-config-sample.php /tmp/wordpress/wp-tests-config.php
    - sed -i "s/youremptytestdbnamehere/wordpress_tests/" /tmp/wordpress/wp-tests-config.php
    - sed -i "s/yourusernamehere/travis/" /tmp/wordpress/wp-tests-config.php
    - sed -i "s/yourpasswordhere//" /tmp/wordpress/wp-tests-config.php

    # Install CodeSniffer for WordPress Coding Standards checks.
    - if [[ "$WP_VERSION" == "master" && "$WP_MULTISITE" == "0" ]]; then git clone https://github.com/squizlabs/PHP_CodeSniffer.git $WP_DEVELOP_DIR/php-codesniffer; fi;
    # Install WordPress Coding Standards.
    - if [[ "$WP_VERSION" == "master" && "$WP_MULTISITE" == "0" ]]; then git clone https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $WP_DEVELOP_DIR/wordpress-coding-standards; fi;
    # Set install path for WordPress Coding Standards
    # @link https://github.com/squizlabs/PHP_CodeSniffer/blob/4237c2fc98cc838730b76ee9cee316f99286a2a7/CodeSniffer.php#L1941
    - if [[ "$WP_VERSION" == "master" && "$WP_MULTISITE" == "0" ]]; then $WP_DEVELOP_DIR/php-codesniffer/scripts/phpcs --config-set installed_paths $WP_DEVELOP_DIR/wordpress-coding-standards; fi;

    # After CodeSniffer install you should refresh your path.
    - phpenv rehash

script:
    # Search for PHP syntax errors.
    - if [[ "$WP_VERSION" == "master" && "$WP_MULTISITE" == "0" ]]; then find . -type "f" -iname "*.php" | xargs -L "1" php -l; fi;

    # WordPress Coding Standards
    # @link https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
    # @link http://pear.php.net/package/PHP_CodeSniffer/
    # -p flag: Show progress of the run.
    # -s flag: Show sniff codes in all reports.
    # -v flag: Print verbose output.
    # -n flag: Do not print warnings (shortcut for --warning-severity=0)
    # --standard: Use WordPress as the standard.
    # --extensions: Only sniff PHP files.
    - if [[ "$WP_VERSION" == "master" && "$WP_MULTISITE" == "0" ]]; then $WP_DEVELOP_DIR/php-codesniffer/scripts/phpcs -p -s -v -n . --standard=./codesniffer.ruleset.xml --extensions=php; fi;

    # Finally, run PHPUnit
    - phpunit